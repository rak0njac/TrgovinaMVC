@model TrgovinaMVC.Models.racun

@{
    ViewBag.Title = "Kreiraj novi račun";
}

<div class="row mb-3">
    <h2>Kreiraj novi račun</h2>
</div>
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "form" }))
{
    <div class="row mb-3">
        <div id="frmRacun">

            @Html.AntiForgeryToken()

            <div class="form-inline">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.tipracuna, "Tip računa:", htmlAttributes: new { @class = "control-label mr-3" })
                    <div>
                        @Html.DropDownListFor(model => model.tipracuna,
                                 new SelectList(new List<SelectListItem>
                                 {
                                                    new SelectListItem { Value = "Gotovinski", Text = "Gotovinski"},
                                                    new SelectListItem { Value = "Virman", Text = "Virman"},
                                 }, "Value", "Text"), null, new { @class = "form-control mr-3", @onchange = "Visible(this.value)" })
                        @Html.ValidationMessageFor(model => model.tipracuna, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.nazivkupca, "Kupac:", htmlAttributes: new { @class = "control-label mr-3" })
                    <div>
                        @Html.DropDownListFor(model => model.nazivkupca, ViewBag.kupci as List<SelectListItem>, htmlAttributes: new { @class = "form-control mr-3" })
                    </div>
                </div>
                <div class="form-group" id="id-date" style="display:none">
                    @Html.LabelFor(model => model.datvalute, "Datum valute:", htmlAttributes: new { @class = "control-label mr-3" })
                    <div>
                        @Html.EditorFor(model => model.datvalute, new { htmlAttributes = new { @class = "form-control mr-3", @data_provide = "datepicker", @autocomplete = "off" } })
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="row mb-1" id="tabela">

        @*@Html.Action("Create","stavkaracunas")*@
        <table class="table table-hover" @*style="width: 1000px"*@>
            <thead>
                <tr>
                    <th scope="col">Artikal</th>
                    <th scope="col">Cena po JM</th>
                    <th scope="col">Količina</th>
                    <th scope="col" />
                </tr>
            </thead>
            <tbody id="stavke">
                @*@Html.EditorFor(model => model.stavkaracunas)*@
                @Html.Partial("StavkeRacuna")
            </tbody>
        </table>
        
    </div>

    @*<div class="row mb-1" id="tabela">
            @Html.Action("Index", "stavkaracunas")
        </div>*@

    <div class="row">
        <input type="button" id="btnStart" value="Dodaj stavku" class="btn btn-primary btn-sm mb-3" onclick="AddStavka()" />
    </div>

    <div class="row">
        <input type="submit" id="btnSbmt" value="Gotovo" class="btn btn-primary btn-lg mb-3" />
    </div>
}

@Html.ActionLink("Nazad", "Index")

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>

        var naziviArtikla
        var brojStavki = 1

        $("document").ready(function () {
            $("#stavke").find("input[type='number'], select").each(function () {
                var name = $(this).attr("name")
                name = "stavkaracunas[0]." + name
                $(this).attr("name", name)
            })

            $("#stavke").find("span").each(function () {
                var name = $(this).attr("data-valmsg-for")
                name = "stavkaracunas[0]." + name
                $(this).attr("data-valmsg-for", name)
            })
            ResetValidator()
            $.get("/racuns/getNaziviKupaca", function (data) {
                $('#nazivkupca').autocomplete({
                    source: data,
                    delay: 0,
                    classes:
                    {
                        "ui-autocomplete": "btn-light"
                    }
                })


            })
            $.get("/racuns/getNaziviArtikla", function (data) {
                console.log(data)
                naziviArtikla = data
                            $('#nazivartikla').autocomplete({
                source: naziviArtikla,
                    delay: 0,
                classes:
                {
                    "ui-autocomplete": "btn-light"
                                }
                
                })
            })

            artikalChange($("#nazivartikla"))

        })

        function ResetValidator() {
                        $('form').removeData('validator');
            $('form').removeData('unobtrusiveValidation');
            $.validator.unobtrusive.parse('form');
        }

        function artikalChange(param) {
            var artikal = $(param).val()
            console.log(artikal)
            var cenaField = $(param).parents("tr").find("input[name*='cenapojm']")
                        var kolicinaField = $(param).parents("tr").find("input[name*='kolicina']")
            console.log(cenaField)
            var cenaPoJm = $.get("/racuns/getCenaPoJm/" + artikal, function (data) {
                $(cenaField).val(data)
                $(kolicinaField).val(0)
            })
        }

    function Visible(val) {
        if (val == "Virman")
            $("#id-date").fadeIn(250);
        else $("#id-date").fadeOut(250);
        }

        function checkStavke() {
            var buttons = $("input[value='Obriši']")
            if (brojStavki > 1) {
                buttons.each(function () { $(this).attr('style', 'display:normal') })
            }
            else
                buttons.each(function () { $(this).attr('style', 'display:none') })
        }

        function AddStavka()
        {
                        brojStavki++
                            checkStavke()

            var newrow = $("tr").last().clone()
            newrow.hide()
            $("#stavke").append(newrow)
            newrow.show(250)
            newrow.find("input[type='text']").val("")
            newrow.find("span[id*='error']").text("")
            artikalChange(newrow.find("select"))
            resetIndex()
            ResetValidator()

        }

        function DeleteStavka(element) {
                            brojStavki--
                            checkStavke()

            $(element).closest("tr").fadeOut(250, function () {
                $(this).remove()

                                resetIndex()
            })
        }

        function resetIndex() {
            $("tbody").children("tr").each(function (index) {
                console.log(index)

                var inputs = $(this).find("input[type='number'], select")
                console.log(inputs)
                $.each(inputs, function () {
                    
                    var name = $(this).attr("name")
                    console.log(name)
                    var leftIndex = name.indexOf('[') + 1
                    var rightIndex = name.indexOf(']')
                    var number = name.substring(leftIndex, rightIndex)
                    name = name.replace(number, index)
                    $(this).attr("name", name)
                })

                var spans = $(this).find("span")

                $.each(spans, function () {
                    var name = $(this).attr("data-valmsg-for")
                    var leftIndex = name.indexOf('[') + 1
                    var rightIndex = name.indexOf(']')
                    var number = name.substring(leftIndex, rightIndex)
                    name = name.replace(number, index)
                    $(this).attr("data-valmsg-for", name)
                })
        })
        }
    </script>
}